{"version":3,"file":"component---src-templates-post-presentation-index-js-c71401c81e4e8572a5ed.js","mappings":"6IAKIA,E,0/BAIJ,SAASC,EAA2B,GAAW,IAATC,EAAI,EAAJA,KACe,KAAfC,EAAAA,EAAAA,WAAS,GAAM,GAA5CC,EAAU,KAAEC,EAAa,KAahC,OAXAC,EAAAA,EAAAA,YACE,WACED,GAAc,GACVL,IAGJA,EAAqBO,EAAAA,OAAAA,EACvB,GACA,CAACH,IAGEA,EAKH,gBAAC,IAAM,KACL,gBAACJ,EAAkB,CAACE,KAAMA,KALrB,gBAAC,IAAM,KAQlB,CAEAD,EAA2BO,UAAY,CACrCN,KAAMO,IAAAA,QAGR,W,wDCrCO,I,o5DCUP,IAcMC,EAAY,oFAoCf,OApCe,yBAChB,WACE,IAAQC,EAAYC,KAAKC,MAAMX,KAAvBS,QACR,IAAKA,EAAS,OAAO,KAErB,IAAMG,EAAW,EAACC,EAAAA,EAAAA,IAAoCJ,EAAQK,UAE9D,OACE,gBAAC,IAAI,CACHC,WAAY,CAAC,OAAQ,SACrBC,SAAS,MACTC,MAAOA,EAAAA,GACPC,mBAAoB,IACpBC,cAAc,QACdC,aAAa,QAEb,gBAAC,IAAK,CAACL,WAAY,CAAC,QAASM,QAAQ,WACnC,gBAAC,IAAO,CAACC,KAAM,EAAGC,KAAG,EAACC,MAAI,EAACC,WAAY,EAAGC,UAAU,SACjDjB,EAAQkB,YAAYC,OAEvB,gBAAC,IAAO,CAACN,KAAM,EAAGE,MAAI,EAACE,UAAU,YAAU,kBAK5Cd,EAASiB,KAAI,SAACC,EAASC,GACtB,OAxCY,SAACD,GACrB,OAAOA,EAAQD,KAAI,SAACG,EAAMC,GACxB,OACE,gBAAC,IAAK,CACJC,IAAG,UAAKJ,EAAQK,KAAI,aAAKF,GACzBlB,WAAY,CAAC,QACbM,QAAQ,YAEPe,EAAAA,EAAAA,IAAsBJ,GAG7B,GACF,CA4BiBK,CAAcP,EACvB,IAEA,gBAAC,IAAK,CAACf,WAAY,CAAC,QAASM,QAAQ,WACnC,gBAAC,IAAO,CAACC,KAAM,EAAGE,MAAI,EAACE,UAAU,YAAU,WAMnD,KAAC,EApCe,CAASY,EAAAA,eAuC3B9B,EAAaF,UAAY,CACvBN,KAAMO,IAAAA,QACN,IAEIgC,EAA0B,oFAW7B,OAX6B,yBAC9B,WACE,OACE,2BACE,qBAAGC,KAAK,OACN,gBAAC,IAAe,CAACC,UDxEF,uCC2EjB,gBAACjC,EAAiBE,KAAKC,OAG7B,KAAC,EAX6B,CAAS2B,EAAAA,WAczC,G","sources":["webpack://alanfoster.github.io/./src/templates/post-presentation/index.js","webpack://alanfoster.github.io/./src/templates/post-presentation/presentation/styles.module.css","webpack://alanfoster.github.io/./src/templates/post-presentation/presentation/index.js"],"sourcesContent":["import Layout from \"components/layouts/presentation\";\nimport { graphql } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React, { useState, useEffect } from \"react\";\n\nlet LoadedPresentation;\n\n// Wrapper required to load Spectacle Presentation\n// https://github.com/gatsbyjs/gatsby/issues/401\nfunction WithoutServerSideRendering({ data }) {\n  const [hasMounted, setHasMounted] = useState(false);\n\n  useEffect(\n    function () {\n      setHasMounted(true);\n      if (LoadedPresentation) return;\n\n      // eslint-disable-next-line no-undef\n      LoadedPresentation = require(\"./presentation\").default;\n    },\n    [hasMounted]\n  );\n\n  if (!hasMounted) {\n    return <Layout />;\n  }\n\n  return (\n    <Layout>\n      <LoadedPresentation data={data} />\n    </Layout>\n  );\n}\n\nWithoutServerSideRendering.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default WithoutServerSideRendering;\n\nexport const query = graphql`\n  query PostPresentationQuery($slug: String!) {\n    content: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      frontmatter {\n        title\n        workshop\n        date(formatString: \"DD MMMM, YYYY\")\n      }\n      fields {\n        slug\n      }\n      htmlAst\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var viewSection = \"styles-module--viewSection--e818d\";","import * as styles from \"./styles.module.css\";\nimport {\n  htmlAstToIntermediateRepresentation,\n  renderNodeToSpectacle,\n  theme,\n} from \"components/presentations\";\nimport ViewSectionIcon from \"components/view-article/index\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Deck, Slide, Heading } from \"spectacle\";\n\nconst renderSection = (section) => {\n  return section.map((node, node_index) => {\n    return (\n      <Slide\n        key={`${section.link}__${node_index}`}\n        transition={[\"zoom\"]}\n        bgColor=\"primary\"\n      >\n        {renderNodeToSpectacle(node)}\n      </Slide>\n    );\n  });\n};\n\nclass Presentation extends React.PureComponent {\n  render() {\n    const { content } = this.props.data;\n    if (!content) return null;\n\n    const sections = [htmlAstToIntermediateRepresentation(content.htmlAst)];\n\n    return (\n      <Deck\n        transition={[\"zoom\", \"slide\"]}\n        progress=\"bar\"\n        theme={theme}\n        transitionDuration={500}\n        contentHeight=\"100vh\"\n        contentWidth=\"80vw\"\n      >\n        <Slide transition={[\"zoom\"]} bgColor=\"primary\">\n          <Heading size={1} fit caps lineHeight={1} textColor=\"black\">\n            {content.frontmatter.title}\n          </Heading>\n          <Heading size={4} caps textColor=\"tertiary\">\n            The Blog Post\n          </Heading>\n        </Slide>\n\n        {sections.map((section, index) => {\n          return renderSection(section, index);\n        })}\n\n        <Slide transition={[\"zoom\"]} bgColor=\"primary\">\n          <Heading size={4} caps textColor=\"tertiary\">\n            le fin\n          </Heading>\n        </Slide>\n      </Deck>\n    );\n  }\n}\n\nPresentation.propTypes = {\n  data: PropTypes.object,\n};\n\nclass PresentationWithQuickLinks extends React.Component {\n  render() {\n    return (\n      <div>\n        <a href=\"../\">\n          <ViewSectionIcon className={styles.viewSection} />\n        </a>\n\n        <Presentation {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default PresentationWithQuickLinks;\n"],"names":["LoadedPresentation","WithoutServerSideRendering","data","useState","hasMounted","setHasMounted","useEffect","require","propTypes","PropTypes","Presentation","content","this","props","sections","htmlAstToIntermediateRepresentation","htmlAst","transition","progress","theme","transitionDuration","contentHeight","contentWidth","bgColor","size","fit","caps","lineHeight","textColor","frontmatter","title","map","section","index","node","node_index","key","link","renderNodeToSpectacle","renderSection","React","PresentationWithQuickLinks","href","className"],"sourceRoot":""}