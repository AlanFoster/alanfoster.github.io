webpackJsonp([27682959553364],{730:function(n,s){n.exports={data:{sidebar:{fields:{yml:{items:[{title:"Presentation",link:"/workshops/jest/presentation/"},{title:"Workshop Goals",link:"/workshops/jest/workshop-goals"},{title:"Features",link:"/workshops/jest/features/"},{title:"Setup",link:"/workshops/jest/setup/"},{title:"Basic tests",link:"/workshops/jest/basic-tests/"},{title:"Babel",link:"/workshops/jest/babel/"},{title:"Globals and Matchers",link:"/workshops/jest/globals-and-matchers/"},{title:"Asychronous Testing",link:"/workshops/jest/asynchronous-testing/"},{title:"Mocks",link:"/workshops/jest/mocks/"},{title:"React",link:"/workshops/jest/react/"}]}}},workshop:{html:'<h2 id="asynchronous-testing"><a href="#asynchronous-testing" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Asynchronous Testing</h2>\n<p>In the land of JavaScript we often find ourselves writing callbacks, and asynchronous\ncode:</p>\n<p><code>meaning-of-life.js</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token comment">// Let\'s pretend</span>\n<span class="token keyword">const</span> sevenAndAHalfMillionYears <span class="token operator">=</span> <span class="token number">750</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sevenAndAHalfMillionYears<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h2 id="writing-the-test"><a href="#writing-the-test" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Writing the test</h2>\n<p>Jest provides multiple ways of testing asynchronous code, however the <code>.resolves</code> and <code>.rejects</code>\nsyntax can often be the easiest:</p>\n<p><code>meaning-of-life.spec.js</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token keyword">import</span> meaningOfLife <span class="token keyword">from</span> <span class="token string">\'../\'</span><span class="token punctuation">;</span>\n\n<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">\'meaning-of-life\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">\'calculates the meaning of life\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">meaningOfLife</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>resolves<span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p><em>Note</em> - the <code>return</code> is important! Jest needs to know about the promise otherwise\nit will fail to work.</p>\n<h2 id="your-turn"><a href="#your-turn" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Your turn</h2>\n<p>We want to write a module for fetching a list of popular movies, and add the corresponding tests.</p>\n<p><code>http://www.alanfoster.me/movies.json</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>\n  <span class="token property">"movies"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"The Hitchhiker\'s Guide to the Galaxy"</span><span class="token punctuation">,</span>\n      <span class="token property">"releaseYear"</span><span class="token operator">:</span> <span class="token number">2005</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Thor: Ragnarok"</span><span class="token punctuation">,</span>\n      <span class="token property">"releaseYear"</span><span class="token operator">:</span> <span class="token number">2017</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>To load this data within JavaScript we can make use of <code>fetch</code>. Fetch is a modern way of loading fetching resources.\nAlthough <code>fetch</code> is available on modern browsers, we can make use of a pollyfill to ensure that older\nbrowsers also have support.</p>\n<p>Add the fetch pollyfill dependency to your project:</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">yarn add --save-dev whatwg-fetch\n</code></pre>\n      </div>\n<p>Create your new module for retrieving the movie list:</p>\n<p><code>src/api/movies/index.js</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token string">\'whatwg-fetch\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">fetchMovies</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">\'http://www.alanfoster.me/movies.json\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=></span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>With the above implementation, you should be able to write a test for the above module with <code>.resolves</code> and a\nsuitable <a href="/workshops/jest/globals-and-matchers/#matchers">matcher</a>.</p>\n<p>Look at the initial example for inspiration.</p>\n<p><code>src/api/movies/__tests__/index.spec.js</code></p>\n\n    <div>\n      <div class="card">\n        <div class="card-header">\n          <h5 class="mb-0 card">\n            <button class="btn btn-link" onClick="\n    this.parentNode.parentNode.parentNode.parentNode\n      .querySelector(\'.card-wrapper\').classList.toggle(\'d-none\')\n  ">\n              View Spoiler?\n            </button>\n          </h5>\n        </div>\n\n        <div class="card-wrapper d-none">\n          <div class="card-body">\n            <div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> service <span class="token keyword">from</span> <span class="token string">\'../\'</span><span class="token punctuation">;</span>\n\n<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">\'movies-api\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">\'fetchMovies\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">\'returns the data\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token function">expect</span><span class="token punctuation">(</span>service<span class="token punctuation">.</span><span class="token function">fetchMovies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>resolves<span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token string">"movies"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            <span class="token string">"title"</span><span class="token punctuation">:</span> <span class="token string">"The Hitchhiker\'s Guide to the Galaxy"</span><span class="token punctuation">,</span>\n            <span class="token string">"releaseYear"</span><span class="token punctuation">:</span> <span class="token number">2005</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            <span class="token string">"title"</span><span class="token punctuation">:</span> <span class="token string">"Thor: Ragnarok"</span><span class="token punctuation">,</span>\n            <span class="token string">"releaseYear"</span><span class="token punctuation">:</span> <span class="token number">2017</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n          </div>\n        </div>\n      </div>\n  ',headings:[{value:"Asynchronous Testing"},{value:"Writing the test"},{value:"Your turn"}],frontmatter:{title:"Jest workshop - Asynchronous Testing",date:null},fields:{slug:"/workshops/jest/asynchronous-testing/"}}},pathContext:{slug:"/workshops/jest/asynchronous-testing/"}}}});
//# sourceMappingURL=path---workshops-jest-asynchronous-testing-0268f7c9be08565e1acc.js.map