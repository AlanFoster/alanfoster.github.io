{"version":3,"file":"component---src-templates-post-presentation-index-js-988dba02081852be261a.js","mappings":"6IAKIA,E,qBA8BJ,UA1BA,SAAoC,GAAW,IAATC,EAAI,EAAJA,KACpC,GAAoCC,EAAAA,EAAAA,WAAS,GAAtCC,EAAU,KAAEC,EAAa,KAUhC,OARAC,EAAAA,EAAAA,YAAU,WACRD,GAAc,GACVJ,IAGJA,EAAqBM,EAAAA,KAAAA,EACvB,GAAG,CAACH,IAECA,EAKH,gBAAC,IAAM,KACL,gBAACH,EAAkB,CAACC,KAAMA,KALrB,gBAAC,IAAM,KAQlB,C,sICFMM,EAAY,8DAoCf,OApCe,wBAChBC,OAAA,WACE,IAAQC,EAAYC,KAAKC,MAAMV,KAAvBQ,QACR,IAAKA,EAAS,OAAO,KAErB,IAAMG,EAAW,EAACC,EAAAA,EAAAA,IAAoCJ,EAAQK,UAE9D,OACE,gBAAC,IAAI,CACHC,WAAY,CAAC,OAAQ,SACrBC,SAAS,MACTC,MAAOA,EAAAA,GACPC,mBAAoB,IACpBC,cAAc,QACdC,aAAa,QAEb,gBAAC,IAAK,CAACL,WAAY,CAAC,QAASM,QAAQ,WACnC,gBAAC,IAAO,CAACC,KAAM,EAAGC,KAAG,EAACC,MAAI,EAACC,WAAY,EAAGC,UAAU,SACjDjB,EAAQkB,YAAYC,OAEvB,gBAAC,IAAO,CAACN,KAAM,EAAGE,MAAI,EAACE,UAAU,YAAU,kBAK5Cd,EAASiB,KAAI,SAACC,EAASC,GACtB,OAzCY,SAAAD,GACpB,OAAOA,EAAQD,KAAI,SAACG,EAAMC,GACxB,OACE,gBAAC,IAAK,CACJC,IAAQJ,EAAQK,KAAI,KAAKF,EACzBlB,WAAY,CAAC,QACbM,QAAQ,YAGPe,EAAAA,EAAAA,IAAsBJ,GAG7B,GACF,CA4BiBK,CAAcP,EACvB,IAEA,gBAAC,IAAK,CAACf,WAAY,CAAC,QAASM,QAAQ,WACnC,gBAAC,IAAO,CAACC,KAAM,EAAGE,MAAI,EAACE,UAAU,YAAU,WAMnD,EAAC,EApCe,CAASY,EAAAA,eA2CrBC,EAA0B,8DAW7B,OAX6B,wBAC9B/B,OAAA,WACE,OACE,2BACE,qBAAGgC,KAAK,OACN,gBAAC,IAAe,CAACC,UC1EF,uCD6EjB,gBAAClC,EAAiBG,KAAKC,OAG7B,EAAC,EAX6B,CAAS2B,EAAAA,WAczC,G","sources":["webpack://alanfoster.github.io/./src/templates/post-presentation/index.js","webpack://alanfoster.github.io/./src/templates/post-presentation/presentation/index.js","webpack://alanfoster.github.io/./src/templates/post-presentation/presentation/styles.module.css"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { graphql } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"components/layouts/presentation\";\n\nlet LoadedPresentation;\n\n// Wrapper required to load Spectacle Presentation\n// https://github.com/gatsbyjs/gatsby/issues/401\nfunction WithoutServerSideRendering({ data }) {\n  const [hasMounted, setHasMounted] = useState(false);\n\n  useEffect(function () {\n    setHasMounted(true);\n    if (LoadedPresentation) return;\n\n    // eslint-disable-next-line no-undef\n    LoadedPresentation = require(\"./presentation\").default;\n  }, [hasMounted]);\n\n  if (!hasMounted) {\n    return <Layout />;\n  }\n\n  return (\n    <Layout>\n      <LoadedPresentation data={data} />\n    </Layout>\n  );\n}\n\nWithoutServerSideRendering.propTypes = {\n  data: PropTypes.object\n};\n\nexport default WithoutServerSideRendering;\n\nexport const query = graphql`\n  query PostPresentationQuery($slug: String!) {\n    content: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      frontmatter {\n        title\n        workshop\n        date(formatString: \"DD MMMM, YYYY\")\n      }\n      fields {\n        slug\n      }\n      htmlAst\n    }\n  }\n`;\n","import React from \"react\";\nimport { Deck, Slide, Heading } from \"spectacle\";\nimport {\n  htmlAstToIntermediateRepresentation,\n  renderNodeToSpectacle,\n  theme\n} from \"components/presentations\";\nimport ViewSectionIcon from \"components/view-article/index\";\nimport * as styles from \"./styles.module.css\";\n\nimport PropTypes from \"prop-types\";\n\nconst renderSection = section => {\n  return section.map((node, node_index) => {\n    return (\n      <Slide\n        key={`${section.link}__${node_index}`}\n        transition={[\"zoom\"]}\n        bgColor=\"primary\"\n\n      >\n        {renderNodeToSpectacle(node)}\n      </Slide>\n    );\n  });\n};\n\nclass Presentation extends React.PureComponent {\n  render() {\n    const { content } = this.props.data;\n    if (!content) return null;\n\n    const sections = [htmlAstToIntermediateRepresentation(content.htmlAst)];\n\n    return (\n      <Deck\n        transition={[\"zoom\", \"slide\"]}\n        progress=\"bar\"\n        theme={theme}\n        transitionDuration={500}\n        contentHeight='100vh'\n        contentWidth='80vw'\n      >\n        <Slide transition={[\"zoom\"]} bgColor=\"primary\">\n          <Heading size={1} fit caps lineHeight={1} textColor=\"black\">\n            {content.frontmatter.title}\n          </Heading>\n          <Heading size={4} caps textColor=\"tertiary\">\n            The Blog Post\n          </Heading>\n        </Slide>\n\n        {sections.map((section, index) => {\n          return renderSection(section, index);\n        })}\n\n        <Slide transition={[\"zoom\"]} bgColor=\"primary\">\n          <Heading size={4} caps textColor=\"tertiary\">\n            le fin\n          </Heading>\n        </Slide>\n      </Deck>\n    );\n  }\n}\n\nPresentation.propTypes = {\n  data: PropTypes.object\n};\n\nclass PresentationWithQuickLinks extends React.Component {\n  render() {\n    return (\n      <div>\n        <a href=\"../\">\n          <ViewSectionIcon className={styles.viewSection} />\n        </a>\n\n        <Presentation {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default PresentationWithQuickLinks;\n","// extracted by mini-css-extract-plugin\nexport var viewSection = \"styles-module--viewSection--6BjVq\";"],"names":["LoadedPresentation","data","useState","hasMounted","setHasMounted","useEffect","require","Presentation","render","content","this","props","sections","htmlAstToIntermediateRepresentation","htmlAst","transition","progress","theme","transitionDuration","contentHeight","contentWidth","bgColor","size","fit","caps","lineHeight","textColor","frontmatter","title","map","section","index","node","node_index","key","link","renderNodeToSpectacle","renderSection","React","PresentationWithQuickLinks","href","className"],"sourceRoot":""}