{"version":3,"sources":["webpack:///./src/templates/post-presentation/index.js","webpack:///./src/templates/post-presentation/presentation/index.js","webpack:///./src/templates/post-presentation/presentation/styles.module.css"],"names":["LoadedPresentation","WithoutServerSideRendering","data","useState","hasMounted","setHasMounted","useEffect","require","default","query","Presentation","render","content","this","props","sections","htmlAstToIntermediateRepresentation","htmlAst","transition","progress","theme","transitionDuration","contentHeight","contentWidth","bgColor","size","fit","caps","lineHeight","textColor","frontmatter","title","map","section","index","node","node_index","key","link","renderNodeToSpectacle","renderSection","React","PureComponent","PresentationWithQuickLinks","href","className","styles","viewSection","Component","module","exports"],"mappings":"8FAAA,iDAKIA,EALJ,iCAmCeC,UA1Bf,YAA+C,IAATC,EAAQ,EAARA,KAAQ,EACRC,oBAAS,GAAtCC,EADqC,KACzBC,EADyB,KAW5C,OARAC,qBAAU,WACRD,GAAc,GACVL,IAGJA,EAAqBO,EAAQ,QAAkBC,WAC9C,CAACJ,IAECA,EAKH,kBAAC,IAAD,KACE,kBAACJ,EAAD,CAAoBE,KAAMA,KALrB,kBAAC,IAAD,OAgBJ,IAAMO,EAAK,a,iKCVZC,E,kGACJC,OAAA,WAAU,IACAC,EAAYC,KAAKC,MAAMZ,KAAvBU,QACR,IAAKA,EAAS,OAAO,KAErB,IAAMG,EAAW,CAACC,YAAoCJ,EAAQK,UAE9D,OACE,kBAAC,IAAD,CACEC,WAAY,CAAC,OAAQ,SACrBC,SAAS,MACTC,MAAOA,IACPC,mBAAoB,IACpBC,cAAc,QACdC,aAAa,QAEb,kBAAC,IAAD,CAAOL,WAAY,CAAC,QAASM,QAAQ,WACnC,kBAAC,IAAD,CAASC,KAAM,EAAGC,KAAG,EAACC,MAAI,EAACC,WAAY,EAAGC,UAAU,SACjDjB,EAAQkB,YAAYC,OAEvB,kBAAC,IAAD,CAASN,KAAM,EAAGE,MAAI,EAACE,UAAU,YAAjC,kBAKDd,EAASiB,KAAI,SAACC,EAASC,GACtB,OAzCY,SAAAD,GACpB,OAAOA,EAAQD,KAAI,SAACG,EAAMC,GACxB,OACE,kBAAC,IAAD,CACEC,IAAQJ,EAAQK,KAAb,KAAsBF,EACzBlB,WAAY,CAAC,QACbM,QAAQ,WAGPe,YAAsBJ,OAgCdK,CAAcP,MAGvB,kBAAC,IAAD,CAAOf,WAAY,CAAC,QAASM,QAAQ,WACnC,kBAAC,IAAD,CAASC,KAAM,EAAGE,MAAI,EAACE,UAAU,YAAjC,a,GA9BiBY,IAAMC,eA2C3BC,E,kGACJhC,OAAA,WACE,OACE,6BACE,uBAAGiC,KAAK,OACN,kBAAC,IAAD,CAAiBC,UAAWC,IAAOC,eAGrC,kBAACrC,EAAiBG,KAAKC,S,GARU2B,IAAMO,WAchCL,a,qBCnFfM,EAAOC,QAAU,CAAC,YAAc","file":"component---src-templates-post-presentation-index-js-01ac172a5db82104ea44.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { graphql } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"components/layouts/presentation\";\n\nlet LoadedPresentation;\n\n// Wrapper required to load Spectacle Presentation\n// https://github.com/gatsbyjs/gatsby/issues/401\nfunction WithoutServerSideRendering({ data }) {\n  const [hasMounted, setHasMounted] = useState(false);\n\n  useEffect(function () {\n    setHasMounted(true);\n    if (LoadedPresentation) return;\n\n    // eslint-disable-next-line no-undef\n    LoadedPresentation = require(\"./presentation\").default;\n  }, [hasMounted]);\n\n  if (!hasMounted) {\n    return <Layout />;\n  }\n\n  return (\n    <Layout>\n      <LoadedPresentation data={data} />\n    </Layout>\n  );\n}\n\nWithoutServerSideRendering.propTypes = {\n  data: PropTypes.object\n};\n\nexport default WithoutServerSideRendering;\n\nexport const query = graphql`\n  query PostPresentationQuery($slug: String!) {\n    content: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      frontmatter {\n        title\n        workshop\n        date(formatString: \"DD MMMM, YYYY\")\n      }\n      fields {\n        slug\n      }\n      htmlAst\n    }\n  }\n`;\n","import React from \"react\";\nimport { Deck, Slide, Heading } from \"spectacle\";\nimport {\n  htmlAstToIntermediateRepresentation,\n  renderNodeToSpectacle,\n  theme\n} from \"components/presentations\";\nimport ViewSectionIcon from \"components/view-article/index\";\nimport styles from \"./styles.module.css\";\n\nimport PropTypes from \"prop-types\";\n\nconst renderSection = section => {\n  return section.map((node, node_index) => {\n    return (\n      <Slide\n        key={`${section.link}__${node_index}`}\n        transition={[\"zoom\"]}\n        bgColor=\"primary\"\n\n      >\n        {renderNodeToSpectacle(node)}\n      </Slide>\n    );\n  });\n};\n\nclass Presentation extends React.PureComponent {\n  render() {\n    const { content } = this.props.data;\n    if (!content) return null;\n\n    const sections = [htmlAstToIntermediateRepresentation(content.htmlAst)];\n\n    return (\n      <Deck\n        transition={[\"zoom\", \"slide\"]}\n        progress=\"bar\"\n        theme={theme}\n        transitionDuration={500}\n        contentHeight='100vh'\n        contentWidth='80vw'\n      >\n        <Slide transition={[\"zoom\"]} bgColor=\"primary\">\n          <Heading size={1} fit caps lineHeight={1} textColor=\"black\">\n            {content.frontmatter.title}\n          </Heading>\n          <Heading size={4} caps textColor=\"tertiary\">\n            The Blog Post\n          </Heading>\n        </Slide>\n\n        {sections.map((section, index) => {\n          return renderSection(section, index);\n        })}\n\n        <Slide transition={[\"zoom\"]} bgColor=\"primary\">\n          <Heading size={4} caps textColor=\"tertiary\">\n            le fin\n          </Heading>\n        </Slide>\n      </Deck>\n    );\n  }\n}\n\nPresentation.propTypes = {\n  data: PropTypes.object\n};\n\nclass PresentationWithQuickLinks extends React.Component {\n  render() {\n    return (\n      <div>\n        <a href=\"../\">\n          <ViewSectionIcon className={styles.viewSection} />\n        </a>\n\n        <Presentation {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default PresentationWithQuickLinks;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewSection\":\"styles-module--viewSection--1lJ7L\"};"],"sourceRoot":""}