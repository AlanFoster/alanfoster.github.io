webpackJsonp([0x9f12072c2264],{732:function(n,s){n.exports={data:{sidebar:{fields:{yml:{items:[{title:"Presentation",link:"/workshops/jest/presentation/"},{title:"Workshop Goals",link:"/workshops/jest/workshop-goals/"},{title:"Features",link:"/workshops/jest/features/"},{title:"Setup",link:"/workshops/jest/setup/"},{title:"Basic tests",link:"/workshops/jest/basic-tests/"},{title:"Babel",link:"/workshops/jest/babel/"},{title:"Globals and Matchers",link:"/workshops/jest/globals-and-matchers/"},{title:"Asychronous Testing",link:"/workshops/jest/asynchronous-testing/"},{title:"Mocks",link:"/workshops/jest/mocks/"},{title:"React",link:"/workshops/jest/react/"}]}}},workshop:{html:'<h2 id="adding-our-first-test"><a href="#adding-our-first-test" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Adding our first test</h2>\n<p>Let\'s create a new file within the top level directory called <code>add.js</code>. It will be\na function that takes two numbers, and returns the added value:</p>\n<p><code>add.js</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> add<span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>And let\'s add the subsequent test:</p>\n<p><code>add.spec.js</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token keyword">var</span> add <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./add\'</span><span class="token punctuation">)</span>\n\n<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">\'add\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">\'adds 2 + 3 to equal 5\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>We can re-run the tests and see that things are looking better:</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">➜  jest-workshop git:<span class="token punctuation">(</span>master<span class="token punctuation">)</span> ✗ yarn run <span class="token function">test</span>\nyarn run v1.3.2\n$ jest\n PASS  ./add.spec.js\n  add\n    ✓ adds two numbers <span class="token punctuation">(</span>5ms<span class="token punctuation">)</span>\n\nTest Suites: 1 passed, 1 total\nTests:       1 passed, 1 total\nSnapshots:   0 total\nTime:        1.06s\nRan all <span class="token function">test</span> suites.\n✨  Done <span class="token keyword">in</span> 1.90s.\n</code></pre>\n      </div>\n<h2 id="your-turn"><a href="#your-turn" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Your Turn</h2>\n<p>We now want a multiply function, with the relevant tests. Create the your new JavaScript file\nfor multiplying, and create a test - remember that the test file extension should be <code>.spec.js</code></p>\n<p>Remember to run your tests with <code>yarn run test</code></p>\n<p><code>multiply.js</code></p>\n\n    <div>\n      <div class="card">\n        <div class="card-header">\n          <h5 class="mb-0 card">\n            <button class="btn btn-link" onClick="\n    this.parentNode.parentNode.parentNode.parentNode\n      .querySelector(\'.card-wrapper\').classList.toggle(\'d-none\')\n  ">\n              View Spoiler?\n            </button>\n          </h5>\n        </div>\n\n        <div class="card-wrapper d-none">\n          <div class="card-body">\n            <div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">multiply</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> add<span class="token punctuation">;</span>\n</code></pre>\n      </div>\n          </div>\n        </div>\n      </div>\n  \n<p><code>multiply.spec.js</code></p>\n\n    <div>\n      <div class="card">\n        <div class="card-header">\n          <h5 class="mb-0 card">\n            <button class="btn btn-link" onClick="\n    this.parentNode.parentNode.parentNode.parentNode\n      .querySelector(\'.card-wrapper\').classList.toggle(\'d-none\')\n  ">\n              View Spoiler?\n            </button>\n          </h5>\n        </div>\n\n        <div class="card-wrapper d-none">\n          <div class="card-body">\n            <div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token keyword">var</span> multiply <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./multiply\'</span><span class="token punctuation">)</span>\n\n<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">\'multiply\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">\'multiples 2 * 3 to equal 6\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n          </div>\n        </div>\n      </div>\n  ',headings:[{value:"Adding our first test"},{value:"Your Turn"}],frontmatter:{title:"Jest workshop - Basic Tests",date:null},fields:{slug:"/workshops/jest/basic-tests/"}}},pathContext:{slug:"/workshops/jest/basic-tests/"}}}});
//# sourceMappingURL=path---workshops-jest-basic-tests-cf2e3c6f87348948d15e.js.map