---
title:  Jest workshop - React
---

## React Support

Jest has great support for React. Infact, if you're new to React, using [Create React App](https://github.com/facebook/create-react-app)
has support for Jest by default. We will continue this tutorial _without_ using Create React App for ease of demonstration.

## Scenario

We've been tasked with building a new React component for a Github related website.
The component will be given an array of Github Repository objects and present them to the user.

### No Repositories

The component will look like the following when there are no repositories present:

TODO

### Repositories Present

TODO

### Create React App

The same steps mentioned above can be taken when integrating Jest with an existing
project that has been generated by the

[Full details](https://facebook.github.io/jest/docs/en/tutorial-react.html)

## Jest set up

We will want to install the React dependencies as well as the core Jest dependencies:

```bash
yarn add --dev react react-dom
yarn add --dev jest babel-jest babel-preset-env babel-preset-react react-test-renderer
```

Ensure that your top level `.babelrc` looks like:

```json
{
  "presets": ["env", "react"]
}
```

### Testing

The component needs to support two scenarios:

- When the Component has no repositories
- When there are repositories present

Let's create a test for this within our workshop:

```
repository-list/__tests__/index.spec.js
```

```javascript
import React from 'react';
import Component from '../';
import renderer from 'react-test-renderer';

describe('repository-list', function () {
  describe('when there are no repositories', function () {
    it('renders the empty message', function () {
      const repositories = [];

      const tree = renderer.create(
        <Component repositories={repositories} />
      );

      expect(tree).toMatchSnapshot();
    });
  });

  describe('when there are repositories', function () {
    it('renders the given repositories', function () {
      const repositories = [];

      const tree = renderer.create(
        <Component repositories={repositories} />
      );

      expect(tree).toMatchSnapshot();
    });
  });
});
```
