{"componentChunkName":"component---src-pages-posts-index-js","path":"/posts/","webpackCompilationHash":"49ed777a210edfbbf050","result":{"data":{"allMarkdownRemark":{"totalCount":7,"edges":[{"node":{"id":"c78c3a7c-f701-59a9-a281-6a4e0355f51a","frontmatter":{"title":"Writing a simple x86 BIOS bootloader","date":"01 December, 2019"},"fields":{"slug":"/posts/writing-a-bootloader/"},"excerpt":"<p>This article explains how to write a very simple x86 bootloader script which can be used as the entry point to running a custom operating system. It assumes some knowledge of assembly, but hopefully all required knowledge should be available within this stand-alone article.</p>\n"}},{"node":{"id":"d2d9a100-13e3-5464-81f6-e6d2f8850b66","frontmatter":{"title":"Developer tools","date":"16 April, 2018"},"fields":{"slug":"/posts/developer-tools/"},"excerpt":"<p>Here's a collection of useful tools that you may reap productivity from. From password managers, to http clients - it's good to know what's available at your disposal.</p>\n"}},{"node":{"id":"89a60f37-fd77-50b9-841a-ac14f39e7ba5","frontmatter":{"title":"Running react unit tests within docker","date":"03 June, 2017"},"fields":{"slug":"/posts/running-react-unit-tests-within-docker/"},"excerpt":"<p>Docker is a great way to provide a consistent environment for running your development environment, test suite, as well as your production servers. It provides an easy method of specifying the environment requirements, dependencies, as well as your required linux distribution.</p>\n<p>For instance; If you are making use of automated tests as part of your Continuous Integration pipeline, it can be useful to know how to run your JavaScript tests within a docker container.</p>\n"}},{"node":{"id":"dde6f43a-a6ae-534d-99f9-005e305a2a63","frontmatter":{"title":"Feature testing with Capybara page objects","date":"31 May, 2017"},"fields":{"slug":"/posts/feature-testing-with-capybara-page-objects/"},"excerpt":"<p>Page objects can be used as a powerful method of abstracting your tests from implementation. Importantly they can be used reduce fragile tests, and promote DRYness - via the encapsulation of common functionality within simple methods. This article attempts to define the ubiquitous language of page objects, and how you might use them when testing your web applications.</p>\n"}},{"node":{"id":"1048c308-d1c9-52f9-beae-38b686c0e5dc","frontmatter":{"title":"JavaScript Fun","date":"28 January, 2012"},"fields":{"slug":"/posts/javascript-fun/"},"excerpt":"<p>If there's one thing I like to do in life, it's have fun with JavaScript.</p>\n<p>Can you guess what this code does?</p>\n<!-- prettier-ignore -->\n\n            <div class=\"code-snippet\">\n              \n              <div class=\"gatsby-highlight\">\n                <pre class=\"language-javascript\"><code class=\"language-javascript\">_<span class=\"token operator\">=</span> <span class=\"token operator\">+</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>__$<span class=\"token operator\">=</span>_<span class=\"token operator\">+</span>_<span class=\"token punctuation\">,</span>__<span class=\"token operator\">=</span>__$<span class=\"token operator\">|</span>_<span class=\"token punctuation\">,</span>$$<span class=\"token operator\">=</span>__$<span class=\"token operator\">&lt;&lt;</span>_<span class=\"token punctuation\">,</span>_$<span class=\"token operator\">=</span>$$<span class=\"token operator\">+</span>$$<span class=\"token punctuation\">,</span>____<span class=\"token operator\">=</span><span class=\"token operator\">!</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>$_$<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>$$$<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>$__<span class=\"token operator\">=</span>$_$<span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n$$_<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>_$_<span class=\"token operator\">=</span>$_$<span class=\"token punctuation\">[</span>__<span class=\"token operator\">&lt;&lt;</span>_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>$_$$<span class=\"token operator\">=</span>____<span class=\"token punctuation\">[</span>$$<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>$<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>____<span class=\"token punctuation\">[</span>__<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>$__<span class=\"token operator\">+</span>$$_<span class=\"token operator\">+</span>_$_<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>_$$<span class=\"token operator\">=</span>____<span class=\"token punctuation\">[</span>__$<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n$_$_<span class=\"token operator\">=</span><span class=\"token string\">\"h\"</span><span class=\"token punctuation\">,</span>___<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>$__$<span class=\"token operator\">=</span>$<span class=\"token punctuation\">[</span>__<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>$__<span class=\"token operator\">+</span>$<span class=\"token punctuation\">[</span>__$<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>____<span class=\"token punctuation\">[</span>__<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_$_<span class=\"token operator\">+</span>$$_<span class=\"token operator\">+</span>$<span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>$<span class=\"token punctuation\">[</span>__<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_$_<span class=\"token operator\">+</span>$__<span class=\"token operator\">+</span>$$_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>$__$<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>$$_<span class=\"token operator\">+</span>\n$_$$<span class=\"token operator\">+</span>_$_<span class=\"token operator\">+</span>$<span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>$$_<span class=\"token operator\">+</span>$<span class=\"token punctuation\">[</span>__$<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>$<span class=\"token punctuation\">[</span>_$<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_$_<span class=\"token operator\">+</span>$_$_<span class=\"token operator\">+</span>$$$<span class=\"token punctuation\">[</span>$$<span class=\"token operator\">+</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>____<span class=\"token punctuation\">[</span>__<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>___<span class=\"token punctuation\">[</span>____<span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_$$<span class=\"token operator\">+</span>$_$$<span class=\"token operator\">+</span>$$_<span class=\"token operator\">+</span>_$_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>\n$_$_<span class=\"token operator\">+</span>$_$$<span class=\"token operator\">+</span>_$$<span class=\"token operator\">+</span>_$$<span class=\"token operator\">+</span>$__<span class=\"token operator\">+</span>$<span class=\"token punctuation\">[</span>_$<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>$$__<span class=\"token operator\">=</span>___<span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>$$__<span class=\"token punctuation\">[</span>_$$<span class=\"token operator\">+</span>$_$$<span class=\"token operator\">+</span>$$$<span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>$__$<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>_$<span class=\"token operator\">+</span>$$\n<span class=\"token operator\">+</span>__$<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_$_<span class=\"token operator\">+</span>$_$_<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>__$<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>$__<span class=\"token operator\">+</span>$$_<span class=\"token operator\">+</span>_$$<span class=\"token operator\">+</span>$$$<span class=\"token punctuation\">[</span>_$<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n              </div>\n            </div>\n          \n"}},{"node":{"id":"1e29e020-62c5-56a2-9b48-f4f41cc70a86","frontmatter":{"title":"Implementing Finite State Machines using Java's enums","date":"22 January, 2012"},"fields":{"slug":"/posts/implementing-finite-state-machines-using-java-enum/"},"excerpt":"<p>There's many ways to implement finite state machines within Java, this article discusses one particular approach that takes advantage of Java's enum construct.</p>\n"}},{"node":{"id":"79725223-8dfa-59c1-8c31-5b42ef4585bc","frontmatter":{"title":"Welcome","date":"04 May, 2011"},"fields":{"slug":"/posts/welcome/"},"excerpt":"<p>Hello, I am Alan Foster and I hope you enjoy reading my first blog post.</p>\n<p>Within this portfolio I hope to maintain a list of the things that I achieve to do with computers!</p>"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}